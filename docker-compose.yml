#version: "3.8"
services:
  metadata:
    image: dynostore/metadata:v2
    restart: unless-stopped
    working_dir: /var/www/
    environment:
      - APIGATEWAY_HOST=apigateway
      - AUTH_HOST=auth

  apigateway:
    image: dynostore/apigateway:python
    ports:
        - "8095:80"
    environment:
      AUTH_HOST: auth
      PUB_SUB_HOST: pub_sub
      METADATA_HOST: metadata_server
  

  metadata_server:
    image: nginx:1.17-alpine
    restart: unless-stopped
    ports:
      - 8005:80
    volumes:
      - ./metadata/default.conf:/etc/nginx/conf.d/default.conf

  db_metadata:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'metadata-api'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'metadata'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'metadata2023'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'metadata2023'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql

  auth: #Authentication service
    image: dynostore/auth:v1
    depends_on:
      - db_auth
    expose:
      - "80"
    environment:
      DB_USER: muyalmanager
      DB_PASSWORD: niCi7unamltrubrlJusp
      DB_NAME: auth
      DB_HOST: db_auth
      DB_PORT: 5432
      APIGATEWAY_HOST: apigateway
    restart: always

  db_auth: #Authentication database
    image: dynostore/databaseauth:v1
    expose:
      - "5432"
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: muyalmanager
      POSTGRES_PASSWORD: niCi7unamltrubrlJusp
      ADMIN_USER: dynoadmin
      ADMIN_PASSWORD: XeN5raSsdJkcOMN
      ADMIN_EMAIL: admin@admin
    volumes:
      - psql-auth:/var/lib/postgresql/data
      - ./auth/schema-sql/auth.sql:/docker-entrypoint-initdb.d/auth.sql
    restart: always

  frontend: #Interfez gráfica
    image: dynostore/frontend:v1
    ports:
      - "8090:80"
    depends_on:
      - auth
      - pub_sub
      - apigateway
    environment:
      APIGATEWAY_HOST: apigateway
    restart: always

  db_pub_sub: #Base de datos del servicio de publicación y suscripción
    image: dynostore/dbpubsub:v1
    expose:
      - "5432"
    environment:
      POSTGRES_DB: pub_sub
      POSTGRES_USER: muyalmanager
      POSTGRES_PASSWORD: sicuhowradRaxi5R2ke6
    volumes:
      - psql-pubsub:/var/lib/postgresql/data
      - ./pub_sub/schema-sql/pub_sub.sql:/docker-entrypoint-initdb.d/pub_sub.sql
    restart: always

  pub_sub: #Servicio de pub/sub 
    image: dynostore/pubsub:v1
    depends_on:
      - db_pub_sub
    expose:
      - "80"
    environment:
      DB_USER: muyalmanager
      DB_PASSWORD: sicuhowradRaxi5R2ke6
      DB_NAME: pub_sub
      DB_HOST: db_pub_sub
      DB_PORT: 5432
      APIGATEWAY_HOST: apigateway
    restart: always

  ######################
  # Storage services
  ######################

  datacontainer1:
    image: dynostore/datacontainer:v1
    ports:
        - "20001:5000"
    volumes:
      - ./datacontainer/objects1/:/data/objects:rw
    environment:
      APIGATEWAY_HOST: apigateway
      AUTH_HOST: auth
    
  datacontainer2:
    image: dynostore/datacontainer:v1
    build: 
      dockerfile: Dockerfile
    ports:
        - "20002:5000"
    volumes:
      - ./datacontainer/objects2/:/data/objects:rw
    environment:
      AUTH_HOST: auth

  datacontainer3:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20003:5000"
    volumes:
      - ./datacontainer/objects3/:/data/objects:rw
    environment:
      AUTH_HOST: auth

  datacontainer4:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20004:5000"
    volumes:
      - ./datacontainer/objects4/:/data/objects:rw
    environment:
      AUTH_HOST: auth

  datacontainer5:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20005:5000"
    volumes:
      - ./datacontainer/objects5/:/data/objects:rw
    environment:
      AUTH_HOST: auth


         
volumes:  
  psql-data-vc:
    driver: local
  sqlt-data-cm:
    driver: local
  psql-pubsub:
    driver: local
  psql-data-vc-api:
    driver: local
  mysql-db-data:
    driver: local
  psql-auth:
    driver: local
  psql-vc:
    driver: local
  my-db:
    driver: local
