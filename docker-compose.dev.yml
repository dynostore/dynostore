version: "3.8"
services:
  metadata:
    build:
      args:
        user: metadata
        uid: 1000
      context: ./metadata
      dockerfile: Dockerfile
    image: dynostore/metadata:v2
    restart: always
    working_dir: /var/www/
    volumes:
      - ./metadata/app:/var/www
    environment:
      - APIGATEWAY_HOST=apigateway
      - AUTH_HOST=auth
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.10

  apigateway:
    image: dynostore/apigateway:v1.1
    build: 
      context: ./APIGateway
      dockerfile: Dockerfile
    ports:
        - "80:80"
    volumes:
      - ./APIGateway/app/:/app
    environment:
      AUTH_HOST: auth
      PUB_SUB_HOST: pub_sub
      METADATA_HOST: metadata_server
      PUBLIC_IP: 192.168.1.227
    restart: always
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.11
    command: hypercorn -c hypercorn.toml main:app --reload --log-level debug

  metadata_server:
    image: nginx:1.17-alpine
    restart: unless-stopped
    ports:
      - 8005:80
    volumes:
      - ./metadata/app:/var/www
      - ./metadata/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db_metadata
      - DB_PORT=3306
      - DB_DATABASE=metadata-api
      - DB_USERNAME=metadata
      - DB_PASSWORD=metadata2023
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.12

  db_metadata:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'metadata-api'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'metadata'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'metadata2023'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'metadata2023'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.13

  auth: #Authentication service
    image: dynostore/auth:v1
    build: 
      context: ./auth
      dockerfile: Dockerfile
    depends_on:
      - db_auth
    expose:
      - "80"
    ports:
      - "8090:80"
    environment:
      DB_USER: muyalmanager
      DB_PASSWORD: niCi7unamltrubrlJusp
      DB_NAME: auth
      DB_HOST: db_auth
      DB_PORT: 5432
      APIGATEWAY_HOST: apigateway
    volumes:
      - ./auth/auth/:/var/www/html/
    restart: always
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.14

  db_auth: #Authentication database
    image: dynostore/databaseauth:v1
    build: 
      context: ./auth
      dockerfile: DB.Dockerfile
    expose:
      - "5432"
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: muyalmanager
      POSTGRES_PASSWORD: niCi7unamltrubrlJusp
      ADMIN_USER: dynoadmin
      ADMIN_PASSWORD: XeN5raSsdJkcOMN
      ADMIN_EMAIL: admin@admin
    volumes:
      - psql-auth:/var/lib/postgresql/data
      - ./auth/schema-sql/auth.sql:/docker-entrypoint-initdb.d/auth.sql
      - ./auth/configure:/configure
    restart: always
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.15

  frontend: #Interfez gráfica
    image: dynostore/frontend:v1
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8091:80"
    depends_on:
      - auth
      - pub_sub
      - apigateway
    environment:
      APIGATEWAY_HOST: apigateway
    volumes:
      - ./frontend/frontend/:/var/www/html/
    restart: always
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.16

  db_pub_sub: #Base de datos del servicio de publicación y suscripción
    image: dynostore/dbpubsub:v1
    build: 
      context: ./pub_sub
      dockerfile: DB.Dockerfile
    expose:
      - "5432"
    environment:
      POSTGRES_DB: pub_sub
      POSTGRES_USER: muyalmanager
      POSTGRES_PASSWORD: sicuhowradRaxi5R2ke6
    volumes:
      - psql-pubsub:/var/lib/postgresql/data
      - ./pub_sub/schema-sql/pub_sub.sql:/docker-entrypoint-initdb.d/pub_sub.sql
    restart: always
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.17

  pub_sub: #Servicio de pub/sub 
    image: dynostore/pubsub:v1
    build: 
      context: ./pub_sub
      dockerfile: Dockerfile
    depends_on:
      - db_pub_sub
    expose:
      - "80"
    environment:
      DB_USER: muyalmanager
      DB_PASSWORD: sicuhowradRaxi5R2ke6
      DB_NAME: pub_sub
      DB_HOST: db_pub_sub
      DB_PORT: 5432
      APIGATEWAY_HOST: apigateway
    volumes:
      - ./pub_sub/pub_sub/:/var/www/html/
    restart: always
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.18

  ######################
  # Storage services
  ######################

  datacontainer1:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20001:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects1/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 1
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.19
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug
    
  datacontainer2:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20002:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects2/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 2
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.20
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug

  datacontainer3:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20003:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects3/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 3
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.21
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug

  datacontainer4:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20004:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects4/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 4
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.22
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug

  datacontainer5:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20005:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects5/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 5
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.23
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug

  datacontainer6:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20006:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects6/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 6
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.24
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug
    
  datacontainer7:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20007:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects7/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 7
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.25
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug

  datacontainer8:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20008:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects8/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 8
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.26
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug

  datacontainer9:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20009:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects9/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 9
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.27
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug

  datacontainer10:
    image: dynostore/datacontainer:v1
    build: 
      context: ./datacontainer
      dockerfile: Dockerfile
    ports:
        - "20010:80"
    volumes:
      - ./datacontainer/code/:/app
      - ./datacontainer/objects10/:/data/objects:rw
    environment:
      AUTH_HOST: auth
      APIGATEWAY_HOST: apigateway
      DATA_CONTAINER_ID: 10
    networks:
      dynonetwork:
        ipv4_address: 10.88.0.28
    command: >
      gunicorn --reload --bind 0.0.0.0:80 app:app
             --workers 4 --threads 2
             --access-logfile '-' --error-logfile '-' --log-level debug
         
volumes:  
  psql-data-vc:
    driver: local
  sqlt-data-cm:
    driver: local
  psql-pubsub:
    driver: local
  psql-data-vc-api:
    driver: local
  mysql-db-data:
    driver: local
  psql-auth:
    driver: local
  psql-vc:
    driver: local
  my-db:
    driver: local

networks:
  dynonetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 10.88.0.0/16
